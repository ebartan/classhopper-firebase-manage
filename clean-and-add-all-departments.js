const admin = require('firebase-admin');
const fs = require('fs');

const serviceAccount = require('./serviceAccountKey.json');

admin.initializeApp({
  credential: admin.credential.cert(serviceAccount)
});

const db = admin.firestore();

async function cleanAndAddAllDepartments() {
  try {
    console.log('üóëÔ∏è  ADIM 1: T√ºm eski department kayƒ±tlarƒ±nƒ± silme...\n');

    const snapshot = await db.collection('department').get();
    console.log(`   Silinecek: ${snapshot.size} kayƒ±t`);

    const batch = db.batch();
    let deleteCount = 0;

    snapshot.docs.forEach((doc) => {
      batch.delete(doc.ref);
      deleteCount++;
    });

    await batch.commit();
    console.log(`   ‚úÖ ${deleteCount} kayƒ±t silindi\n`);

    console.log('‚ûï ADIM 2: 46 b√∂l√ºm√º temiz veri ile ekleme...\n');

    // JSON dosyasƒ±ndan b√∂l√ºmleri oku
    const departmentsData = JSON.parse(
      fs.readFileSync('departments-with-social-media.json', 'utf-8')
    );

    let successCount = 0;
    let skippedCount = 0;

    for (const deptData of departmentsData) {
      // ƒ∞simsiz kayƒ±tlarƒ± atla
      if (!deptData.name || deptData.name.trim() === '') {
        console.log(`   ‚è≠Ô∏è  Atlanan: ${deptData.faculty} - ƒ∞simsiz b√∂l√ºm`);
        skippedCount++;
        continue;
      }

      const newDeptData = {
        bolumAdi: deptData.name,
        fakulteAdi: deptData.faculty,
        url: deptData.url || '',
        socialMedia: deptData.socialMedia || {
          twitter: '',
          instagram: '',
          facebook: '',
          linkedin: '',
          youtube: ''
        },
        isSubdomain: deptData.isSubdomain || false,
        createdAt: admin.firestore.FieldValue.serverTimestamp()
      };

      const docRef = await db.collection('department').add(newDeptData);

      console.log(`   ‚úÖ ${deptData.name} (${deptData.faculty}) - ID: ${docRef.id}`);
      successCount++;
    }

    console.log(`\n${'='.repeat(60)}`);
    console.log('üìä SONU√á');
    console.log('='.repeat(60));
    console.log(`‚úÖ Eklenen: ${successCount} b√∂l√ºm`);
    console.log(`‚è≠Ô∏è  Atlanan: ${skippedCount} b√∂l√ºm (isimsiz)`);
    console.log(`üìù Toplam: ${departmentsData.length} b√∂l√ºm`);
    console.log('='.repeat(60));

    // Final kontrol
    console.log('\nüîç Final Kontrol...\n');

    const finalSnapshot = await db.collection('department').get();
    let withUrl = 0;
    let withSocialMedia = 0;

    finalSnapshot.forEach(doc => {
      const data = doc.data();

      if (data.url && data.url.trim() !== '') {
        withUrl++;
      }

      if (data.socialMedia) {
        const hasAnySocial = Object.values(data.socialMedia).some(v => v && v.trim() !== '');
        if (hasAnySocial) {
          withSocialMedia++;
        }
      }
    });

    console.log(`üìà Firebase Department Koleksiyonu:`);
    console.log(`   üìä Toplam: ${finalSnapshot.size} b√∂l√ºm`);
    console.log(`   üåê URL ile: ${withUrl} b√∂l√ºm (${Math.round(withUrl/finalSnapshot.size*100)}%)`);
    console.log(`   üì± Sosyal medya ile: ${withSocialMedia} b√∂l√ºm (${Math.round(withSocialMedia/finalSnapshot.size*100)}%)`);
    console.log(`   ‚úÖ Her b√∂l√ºm isimli: ${finalSnapshot.docs.every(d => d.data().bolumAdi && d.data().bolumAdi.trim() !== '') ? 'EVET' : 'HAYIR'}`);

  } catch (error) {
    console.error('‚ùå Hata:', error);
  } finally {
    process.exit();
  }
}

cleanAndAddAllDepartments();
